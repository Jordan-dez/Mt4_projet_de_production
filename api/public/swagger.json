{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Roles": {
				"enum": [
					"Student",
					"Admin"
				],
				"type": "string"
			},
			"Partial_IUser_": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Roles"
					},
					"token": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time",
						"nullable": true
					}
				},
				"type": "object",
				"description": "Make all properties in T optional"
			},
			"Pick_IUserORM.Exclude_keyofIUserORM.-or-updated_at__": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					},
					"role": {
						"$ref": "#/components/schemas/Roles"
					},
					"token": {
						"type": "string",
						"nullable": true
					},
					"created_at": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"uuid",
					"email",
					"created_at"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IUserORM.-or-updated_at_": {
				"$ref": "#/components/schemas/Pick_IUserORM.Exclude_keyofIUserORM.-or-updated_at__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IUserOrmCreate": {
				"$ref": "#/components/schemas/Omit_IUserORM.-or-updated_at_"
			},
			"Pick_IChallenge.name-or-description_": {
				"properties": {
					"name": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Pick_IQuestions.Exclude_keyofIQuestions.id-or-challengeUuid-or-createdAt-or-updatedAt__": {
				"properties": {
					"question": {
						"type": "string"
					},
					"expectedAnswer": {
						"type": "string"
					},
					"command": {
						"type": "string"
					},
					"note": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"question",
					"expectedAnswer"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_IQuestions.id-or-challengeUuid-or-createdAt-or-updatedAt_": {
				"$ref": "#/components/schemas/Pick_IQuestions.Exclude_keyofIQuestions.id-or-challengeUuid-or-createdAt-or-updatedAt__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IQuestionsCreate": {
				"$ref": "#/components/schemas/Omit_IQuestions.id-or-challengeUuid-or-createdAt-or-updatedAt_"
			},
			"IChallengeRequestBody": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Pick_IChallenge.name-or-description_"
					},
					{
						"properties": {
							"questions": {
								"items": {
									"$ref": "#/components/schemas/IQuestionsCreate"
								},
								"type": "array"
							}
						},
						"required": [
							"questions"
						],
						"type": "object"
					}
				]
			},
			"Pick_IUserORM.firstname-or-lastname_": {
				"properties": {
					"firstname": {
						"type": "string"
					},
					"lastname": {
						"type": "string"
					}
				},
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"IUpdateUserName": {
				"$ref": "#/components/schemas/Pick_IUserORM.firstname-or-lastname_"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "jwt",
				"in": "header",
				"authorizationUrl": "http://swagger.io/api/oauth/dialog"
			}
		}
	},
	"info": {
		"title": "api",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/auth/magic-link-admin": {
			"get": {
				"operationId": "SendAdminMagicLink",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/magic-link-student": {
			"get": {
				"operationId": "SendStudentMagicLink",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "challengeUuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "challengeName",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/login": {
			"get": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/Partial_IUser_"
										},
										{
											"properties": {
												"admin": {
													"type": "boolean"
												},
												"jwt": {
													"type": "string"
												}
											},
											"required": [
												"admin",
												"jwt"
											],
											"type": "object"
										}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "token",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/auth/user": {
			"put": {
				"operationId": "CreateStudentProfile",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"ok": {
											"type": "boolean"
										}
									},
									"required": [
										"ok"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserOrmCreate"
							}
						}
					}
				}
			}
		},
		"/protected/challenge": {
			"post": {
				"operationId": "Create",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"ok": {
											"type": "boolean"
										}
									},
									"required": [
										"ok"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"Admin"
						]
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IChallengeRequestBody"
							}
						}
					}
				}
			}
		},
		"/protected/challenge/{uuid}": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"jwt": [
							"Admin"
						]
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/protected/ssh/{challengeUuid}/test-connection": {
			"get": {
				"operationId": "TestConnection",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "path",
						"name": "challengeUuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "serverName",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "ipAddress",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/protected/user/{uuid}": {
			"patch": {
				"operationId": "UpdateUserName",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"ok": {
											"type": "boolean"
										}
									},
									"required": [
										"ok"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "uuid",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUpdateUserName"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}